From ef98dbcd8fc0a4f2e32d46cca94a633b85141269 Mon Sep 17 00:00:00 2001
From: Tim Stahlhut <stahta01@gmail.com>
Date: Sun, 15 Nov 2020 01:23:38 -0500
Subject: 64 bit cast fix for MinGW

---
 src/aui/framemanager.cpp |  2 +-
 src/common/utilscmn.cpp  |  2 +-
 src/msw/dcprint.cpp      |  2 +-
 src/msw/frame.cpp        |  4 ++--
 src/msw/helpwin.cpp      |  2 +-
 src/msw/mdi.cpp          |  6 +++---
 src/msw/menu.cpp         | 12 ++++++------
 src/msw/pen.cpp          |  4 ++--
 src/msw/printdlg.cpp     | 28 ++++++++++++++--------------
 src/msw/tbar95.cpp       |  8 ++++----
 src/msw/textctrl.cpp     |  4 ++--
 src/msw/thread.cpp       |  6 +++---
 src/msw/tooltip.cpp      |  2 +-
 src/msw/window.cpp       |  2 +-
 14 files changed, 42 insertions(+), 42 deletions(-)

diff --git a/src/aui/framemanager.cpp b/src/aui/framemanager.cpp
index 1dccff2527..09471eb977 100644
--- a/src/aui/framemanager.cpp
+++ b/src/aui/framemanager.cpp
@@ -974,7 +974,7 @@ bool wxAuiManager::AddPane(wxWindow* window, const wxAuiPaneInfo& pane_info)
     if (pinfo.name.empty() || already_exists)
     {
         pinfo.name.Printf(wxT("%08lx%08x%08x%08lx"),
-             ((unsigned long)pinfo.window) & 0xffffffff,
+             ((unsigned long)(intptr_t)pinfo.window) & 0xffffffff,
              (unsigned int)time(NULL),
 #ifdef __WXWINCE__
              (unsigned int)GetTickCount(),
diff --git a/src/common/utilscmn.cpp b/src/common/utilscmn.cpp
index 210c2232c0..70a8ac29a0 100644
--- a/src/common/utilscmn.cpp
+++ b/src/common/utilscmn.cpp
@@ -822,7 +822,7 @@ static bool wxLaunchDefaultBrowserBaseImpl(const wxString& url, int flags)
     //hInstApp member is only valid if the function fails, in which case it
     //receives one of the following error values, which are less than or
     //equal to 32.
-    const int nResult = (int) sei.hInstApp;
+    const intptr_t nResult = (intptr_t)sei.hInstApp;
 
     // Firefox returns file not found for some reason, so make an exception
     // for it
diff --git a/src/msw/dcprint.cpp b/src/msw/dcprint.cpp
index 4b514b9e32..9d5519297c 100644
--- a/src/msw/dcprint.cpp
+++ b/src/msw/dcprint.cpp
@@ -319,7 +319,7 @@ WXHDC WXDLLEXPORT wxGetPrinterDC(const wxPrintData& printDataConst)
     }
 
 
-    HGLOBAL hDevMode = (HGLOBAL)(DWORD) data->GetDevMode();
+    HGLOBAL hDevMode = (HGLOBAL) data->GetDevMode();
 
     DEVMODE *lpDevMode = hDevMode ? (DEVMODE *)::GlobalLock(hDevMode) : NULL;
 
diff --git a/src/msw/frame.cpp b/src/msw/frame.cpp
index 410bed3864..a26ca0da23 100644
--- a/src/msw/frame.cpp
+++ b/src/msw/frame.cpp
@@ -855,7 +855,7 @@ bool wxFrame::HandlePaint()
             HDC hdc = ::BeginPaint(GetHwnd(), &ps);
 
             // Erase background before painting or we get white background
-            MSWDefWindowProc(WM_ICONERASEBKGND, (WORD)(LONG)ps.hdc, 0L);
+            MSWDefWindowProc(WM_ICONERASEBKGND, (intptr_t)ps.hdc, 0L);
 
             if ( hIcon )
             {
@@ -1085,7 +1085,7 @@ WXLRESULT wxFrame::MSWWindowProc(WXUINT message, WXWPARAM wParam, WXLPARAM lPara
                 const wxIcon& icon = GetIcon();
                 HICON hIcon = icon.Ok() ? GetHiconOf(icon)
                                         : (HICON)GetDefaultIcon();
-                rc = (long)hIcon;
+                rc = (intptr_t)hIcon; // WXLRESULT is int64 in win64
                 processed = rc != 0;
             }
             break;
diff --git a/src/msw/helpwin.cpp b/src/msw/helpwin.cpp
index 3b9ec5549d..1f76134ba4 100644
--- a/src/msw/helpwin.cpp
+++ b/src/msw/helpwin.cpp
@@ -98,7 +98,7 @@ bool wxWinHelpController::KeywordSearch(const wxString& k,
 
     wxString str = GetValidFilename(m_helpFile);
 
-    return (WinHelp(GetSuitableHWND(this), (const wxChar*) str, HELP_PARTIALKEY, (DWORD)(const wxChar*) k) != 0);
+    return (WinHelp(GetSuitableHWND(this), (const wxChar*) str, HELP_PARTIALKEY, (intptr_t)(const wxChar*) k) != 0);
 }
 
 // Can't close the help window explicitly in WinHelp
diff --git a/src/msw/mdi.cpp b/src/msw/mdi.cpp
index 7245f39a0f..55aefbb277 100644
--- a/src/msw/mdi.cpp
+++ b/src/msw/mdi.cpp
@@ -763,7 +763,7 @@ bool wxMDIChildFrame::Create(wxMDIParentFrame *parent,
   wxWindowCreationHook hook(this);
 
   m_hWnd = (WXHWND)::SendMessage(GetWinHwnd(parent->GetClientWindow()),
-                                 WM_MDICREATE, 0, (LONG)(LPSTR)&mcs);
+                                 WM_MDICREATE, 0, (intptr_t)&mcs);
 
   if ( !m_hWnd )
   {
@@ -1433,14 +1433,14 @@ static void InsertWindowMenu(wxWindow *win, WXHMENU menu, HMENU subMenu)
             {
                 success = true;
                 ::InsertMenu(hmenu, i, MF_BYPOSITION | MF_POPUP | MF_STRING,
-                             (UINT)subMenu, _("&Window"));
+                             (intptr_t)subMenu, _("&Window"));
                 break;
             }
         }
 
         if ( !success )
         {
-            ::AppendMenu(hmenu, MF_POPUP, (UINT)subMenu, _("&Window"));
+            ::AppendMenu(hmenu, MF_POPUP, (intptr_t)subMenu, _("&Window"));
         }
     }
 
diff --git a/src/msw/menu.cpp b/src/msw/menu.cpp
index 3230373c9b..54eae026de 100644
--- a/src/msw/menu.cpp
+++ b/src/msw/menu.cpp
@@ -377,7 +377,7 @@ bool wxMenu::DoInsertOrAppend(wxMenuItem *pItem, size_t pos)
 
         submenu->SetParent(this);
 
-        id = (UINT)submenu->GetHMenu();
+        id = (intptr_t)submenu->GetHMenu();
 
         flags |= MF_POPUP;
     }
@@ -963,7 +963,7 @@ WXHMENU wxMenuBar::Create()
         for ( i = 0, it = m_menus.begin(); i < count; i++, it++ )
         {
             if ( !::AppendMenu((HMENU)m_hMenu, MF_POPUP | MF_STRING,
-                               (UINT)(*it)->GetHMenu(),
+                               (intptr_t)(*it)->GetHMenu(),
                                m_titles[i]) )
             {
                 wxLogLastError(wxT("AppendMenu"));
@@ -1048,7 +1048,7 @@ void wxMenuBar::SetLabelTop(size_t pos, const wxString& label)
     {
         // HIBYTE contains the number of items in the submenu in this case
         flagsOld &= 0xff;
-        id = (UINT)::GetSubMenu((HMENU)m_hMenu, mswpos);
+        id = (intptr_t)::GetSubMenu((HMENU)m_hMenu, mswpos);
     }
     else
     {
@@ -1124,7 +1124,7 @@ wxMenu *wxMenuBar::Replace(size_t pos, wxMenu *menu, const wxString& title)
 
         if ( !::InsertMenu(GetHmenu(), (UINT)mswpos,
                            MF_BYPOSITION | MF_POPUP | MF_STRING,
-                           (UINT)GetHmenuOf(menu), title) )
+                           (intptr_t)GetHmenuOf(menu), title) )
         {
             wxLogLastError(wxT("InsertMenu"));
         }
@@ -1191,7 +1191,7 @@ bool wxMenuBar::Insert(size_t pos, wxMenu *menu, const wxString& title)
 #else
         if ( !::InsertMenu(GetHmenu(), mswpos,
                            MF_BYPOSITION | MF_POPUP | MF_STRING,
-                           (UINT)GetHmenuOf(menu), title) )
+                           (intptr_t)GetHmenuOf(menu), title) )
         {
             wxLogLastError(wxT("InsertMenu"));
         }
@@ -1250,7 +1250,7 @@ bool wxMenuBar::Append(wxMenu *menu, const wxString& title)
         }
 #else
         if ( !::AppendMenu(GetHmenu(), MF_POPUP | MF_STRING,
-                           (UINT)submenu, title) )
+                           (intptr_t)submenu, title) )
         {
             wxLogLastError(wxT("AppendMenu"));
         }
diff --git a/src/msw/pen.cpp b/src/msw/pen.cpp
index 92b08327a6..f12fae12ed 100644
--- a/src/msw/pen.cpp
+++ b/src/msw/pen.cpp
@@ -172,9 +172,9 @@ bool wxPen::RealizeResource()
            case wxSTIPPLE:
                logb.lbStyle = BS_PATTERN ;
                if (M_PENDATA->m_stipple.Ok())
-                   logb.lbHatch = (LONG)M_PENDATA->m_stipple.GetHBITMAP();
+                   logb.lbHatch = (intptr_t)M_PENDATA->m_stipple.GetHBITMAP();
                else
-                   logb.lbHatch = (LONG)0;
+                   logb.lbHatch = (intptr_t)0;
                break;
            case wxBDIAGONAL_HATCH:
                logb.lbStyle = BS_HATCHED;
diff --git a/src/msw/printdlg.cpp b/src/msw/printdlg.cpp
index 1c9c22a33b..8adbe47fb2 100644
--- a/src/msw/printdlg.cpp
+++ b/src/msw/printdlg.cpp
@@ -175,10 +175,10 @@ wxWindowsPrintNativeData::wxWindowsPrintNativeData()
 
 wxWindowsPrintNativeData::~wxWindowsPrintNativeData()
 {
-    HGLOBAL hDevMode = (HGLOBAL)(DWORD) m_devMode;
+    HGLOBAL hDevMode = (HGLOBAL) m_devMode;
     if ( hDevMode )
         GlobalFree(hDevMode);
-    HGLOBAL hDevNames = (HGLOBAL)(DWORD) m_devNames;
+    HGLOBAL hDevNames = (HGLOBAL) m_devNames;
     if ( hDevNames )
         GlobalFree(hDevNames);
 }
@@ -190,8 +190,8 @@ bool wxWindowsPrintNativeData::IsOk() const
 
 bool wxWindowsPrintNativeData::TransferTo( wxPrintData &data )
 {
-    HGLOBAL hDevMode = (HGLOBAL)(DWORD) m_devMode;
-    HGLOBAL hDevNames = (HGLOBAL)(DWORD) m_devNames;
+    HGLOBAL hDevMode = (HGLOBAL) m_devMode;
+    HGLOBAL hDevNames = (HGLOBAL) m_devNames;
 
     if (!hDevMode)
     {
@@ -396,8 +396,8 @@ bool wxWindowsPrintNativeData::TransferTo( wxPrintData &data )
 
 bool wxWindowsPrintNativeData::TransferFrom( const wxPrintData &data )
 {
-    HGLOBAL hDevMode = (HGLOBAL)(DWORD) m_devMode;
-    HGLOBAL hDevNames = (HGLOBAL)(DWORD) m_devNames;
+    HGLOBAL hDevMode = (HGLOBAL) m_devMode;
+    HGLOBAL hDevNames = (HGLOBAL) m_devNames;
     WinPrinter printer;
     LPTSTR szPrinterName = (LPTSTR)data.GetPrinterName().wx_str();
 
@@ -493,7 +493,7 @@ bool wxWindowsPrintNativeData::TransferFrom( const wxPrintData &data )
         else
         {
             hDevMode = pd.hDevMode;
-            m_devMode = (void*)(long) hDevMode;
+            m_devMode = (void*)(intptr_t) hDevMode;
             pd.hDevMode = NULL;
 
             // We'll create a new DEVNAMEs structure below.
@@ -688,7 +688,7 @@ bool wxWindowsPrintNativeData::TransferFrom( const wxPrintData &data )
     }
 
     // TODO: I hope it's OK to pass some empty strings to DEVNAMES.
-    m_devNames = (void*) (long) wxCreateDevNames(wxEmptyString, data.GetPrinterName(), wxEmptyString);
+    m_devNames = (void*) (intptr_t) wxCreateDevNames(wxEmptyString, data.GetPrinterName(), wxEmptyString);
 
     return true;
 }
@@ -820,13 +820,13 @@ bool wxWindowsPrintDialog::ConvertToNative( wxPrintDialogData &data )
     if (pd->hDevNames)
         GlobalFree(pd->hDevNames);
 
-    pd->hDevMode = (HGLOBAL)(DWORD) native_data->GetDevMode();
+    pd->hDevMode = (HGLOBAL) native_data->GetDevMode();
     native_data->SetDevMode( (void*) NULL);
 
     // Shouldn't assert; we should be able to test Ok-ness at a higher level
     //wxASSERT_MSG( (pd->hDevMode), wxT("hDevMode must be non-NULL in ConvertToNative!"));
 
-    pd->hDevNames = (HGLOBAL)(DWORD) native_data->GetDevNames();
+    pd->hDevNames = (HGLOBAL) native_data->GetDevNames();
     native_data->SetDevNames( (void*) NULL);
 
 
@@ -897,9 +897,9 @@ bool wxWindowsPrintDialog::ConvertFromNative( wxPrintDialogData &data )
         if (native_data->GetDevMode())
         {
             // Make sure we don't leak memory
-            GlobalFree( (HGLOBAL)(DWORD) native_data->GetDevMode() );
+            GlobalFree( (HGLOBAL) native_data->GetDevMode() );
         }
-        native_data->SetDevMode( (void*)(long) pd->hDevMode );
+        native_data->SetDevMode( (void*)(intptr_t) pd->hDevMode );
         pd->hDevMode = NULL;
     }
 
@@ -909,9 +909,9 @@ bool wxWindowsPrintDialog::ConvertFromNative( wxPrintDialogData &data )
         if (native_data->GetDevNames())
         {
             // Make sure we don't leak memory
-            GlobalFree((HGLOBAL)(DWORD) native_data->GetDevNames());
+            GlobalFree((HGLOBAL) native_data->GetDevNames());
         }
-        native_data->SetDevNames((void*)(long) pd->hDevNames);
+        native_data->SetDevNames((void*)(intptr_t) pd->hDevNames);
         pd->hDevNames = NULL;
     }
 
diff --git a/src/msw/tbar95.cpp b/src/msw/tbar95.cpp
index 1c8476be2a..7b3a250db9 100644
--- a/src/msw/tbar95.cpp
+++ b/src/msw/tbar95.cpp
@@ -802,8 +802,8 @@ bool wxToolBar::Realize()
                 TBREPLACEBITMAP replaceBitmap;
                 replaceBitmap.hInstOld = NULL;
                 replaceBitmap.hInstNew = NULL;
-                replaceBitmap.nIDOld = (UINT) oldToolBarBitmap;
-                replaceBitmap.nIDNew = (UINT) hBitmap;
+                replaceBitmap.nIDOld = (intptr_t) oldToolBarBitmap;
+                replaceBitmap.nIDNew = (intptr_t) hBitmap;
                 replaceBitmap.nButtons = nButtons;
                 if ( !::SendMessage(GetHwnd(), TB_REPLACEBITMAP,
                                     0, (LPARAM) &replaceBitmap) )
@@ -832,7 +832,7 @@ bool wxToolBar::Realize()
         {
             TBADDBITMAP addBitmap;
             addBitmap.hInst = 0;
-            addBitmap.nID = (UINT) hBitmap;
+            addBitmap.nID = (intptr_t) hBitmap;
             if ( ::SendMessage(GetHwnd(), TB_ADDBITMAP,
                                (WPARAM) nButtons, (LPARAM)&addBitmap) == -1 )
             {
@@ -912,7 +912,7 @@ bool wxToolBar::Realize()
                 {
                     const wxString& label = tool->GetLabel();
                     if ( !label.empty() )
-                        button.iString = (int)label.c_str();
+                        button.iString = (intptr_t)label.c_str();
                 }
 
                 button.idCommand = tool->GetId();
diff --git a/src/msw/textctrl.cpp b/src/msw/textctrl.cpp
index cc6c4a241c..9336666fff 100644
--- a/src/msw/textctrl.cpp
+++ b/src/msw/textctrl.cpp
@@ -960,7 +960,7 @@ wxTextCtrl::StreamIn(const wxString& value,
     // finally, stream it in the control
     EDITSTREAM eds;
     wxZeroMemory(eds);
-    eds.dwCookie = (DWORD)&wpc;
+    eds.dwCookie = (intptr_t)&wpc;
     // the cast below is needed for broken (very) old mingw32 headers
     eds.pfnCallback = (EDITSTREAMCALLBACK)wxRichEditStreamIn;
 
@@ -1013,7 +1013,7 @@ wxTextCtrl::StreamOut(wxFontEncoding encoding, bool selectionOnly) const
 
     EDITSTREAM eds;
     wxZeroMemory(eds);
-    eds.dwCookie = (DWORD)&data;
+    eds.dwCookie = (intptr_t)&data;
     eds.pfnCallback = wxRichEditStreamOut;
 
     ::SendMessage
diff --git a/src/msw/thread.cpp b/src/msw/thread.cpp
index b080827504..a9ed6b7f8e 100644
--- a/src/msw/thread.cpp
+++ b/src/msw/thread.cpp
@@ -522,7 +522,7 @@ THREAD_RETVAL wxThreadInternal::DoThreadStart(wxThread *thread)
             return (THREAD_RETVAL)-1;
         }
 
-        rc = (THREAD_RETVAL)thread->Entry();
+        rc = (THREAD_RETVAL)(intptr_t)thread->Entry();
     }
     wxCATCH_ALL( wxTheApp->OnUnhandledException(); )
 
@@ -842,7 +842,7 @@ wxThreadInternal::WaitForTerminate(wxCriticalSection& cs,
             break;
         }
 
-        if ( (DWORD)rc != STILL_ACTIVE )
+        if ( (intptr_t)rc != STILL_ACTIVE )
             break;
 
         // give the other thread some time to terminate, otherwise we may be
@@ -1162,7 +1162,7 @@ void wxThread::Exit(ExitCode status)
     }
 
 #ifdef wxUSE_BEGIN_THREAD
-    _endthreadex((unsigned)status);
+    _endthreadex((unsigned)(intptr_t)status);
 #else // !VC++
     ::ExitThread((DWORD)status);
 #endif // VC++/!VC++
diff --git a/src/msw/tooltip.cpp b/src/msw/tooltip.cpp
index ebf8535b2d..006f9a5e15 100644
--- a/src/msw/tooltip.cpp
+++ b/src/msw/tooltip.cpp
@@ -106,7 +106,7 @@ public:
             uFlags |= TTF_TRANSPARENT;
         }
 
-        uId = (UINT)hwndOwner;
+        uId = (intptr_t)hwndOwner;
     }
 };
 
diff --git a/src/msw/window.cpp b/src/msw/window.cpp
index bd1b432206..cccac34675 100644
--- a/src/msw/window.cpp
+++ b/src/msw/window.cpp
@@ -3434,7 +3434,7 @@ wxWinHashTable *wxWinHandleHash = NULL;
 
 wxWindow *wxFindWinFromHandle(WXHWND hWnd)
 {
-    return (wxWindow*)wxWinHandleHash->Get((long)hWnd);
+    return (wxWindow*)wxWinHandleHash->Get((intptr_t)hWnd);
 }
 
 void wxAssociateWinWithHandle(HWND hWnd, wxWindowMSW *win)
-- 
2.29.2.windows.2

